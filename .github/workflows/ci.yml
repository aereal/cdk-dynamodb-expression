---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - release
  schedule:
    - cron: '0 1 * * *'
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-yarn-
      -
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: 'https://registry.npmjs.org'
      - name: install
        run: yarn install --frozen-lockfile
      - name: test
        run: yarn test:ci
        env:
          CI: true
      - name: save coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./coverage
      - name: build
        run: yarn build
      - name: build docs
        if: github.ref == 'refs/heads/release'
        run: yarn docs
      - name: save docs
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./docs
      - name: release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
        run: yarn semantic-release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}
  docs:
    needs: ci
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - name: download docs artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
          path: ./docs
      - run: ls -lAF
      - name: publish docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
  coverage:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      -
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ./coverage
      - run: ls -lAF
      - name: upload coverage
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
